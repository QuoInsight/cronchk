<Activity mc:Ignorable="sap sap2010 sads" x:Class="cron" this:cron.crontab="[Environment.CurrentDirectory + &quot;\crontab.txt&quot;]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="crontab" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>crontab_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_2">
    <Flowchart.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="currentTime" />
      <Variable x:TypeArguments="x:TimeSpan" Name="waitTimeSpan" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_4">
        <Assign DisplayName="Assign: getTime" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="s:DateTime">[currentTime]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
          </Assign.Value>
        </Assign>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_3">
            <TryCatch DisplayName="TryCatch: start cron" sap2010:WorkflowViewState.IdRef="TryCatch_2">
              <TryCatch.Try>
                <Sequence DisplayName="start cron" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="powerShellCommand" />
                    <Variable x:TypeArguments="sco:Collection(x:String)" Name="cronJobs" />
                    <Variable x:TypeArguments="x:String" Name="txtFileContent" />
                  </Sequence.Variables>
                  <ui:ReadTextFile Content="[txtFileContent]" DisplayName="Read text file" FileName="[crontab]" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                  <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[txtFileContent.Split(Chr(10))]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="line" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body: cronline" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[line]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[line.Trim]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[line.StartsWith(&quot;#&quot;) Or line.Length &lt; 13]" DisplayName="If: cronline" sap2010:WorkflowViewState.IdRef="If_1">
                            <If.Else>
                              <Sequence DisplayName="Sequence: cronchk" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="str:Match" Name="m" />
                                </Sequence.Variables>
                                <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[line]" />
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                </ui:CommentOut>
                                <Assign DisplayName="Assign: regex match" sap2010:WorkflowViewState.IdRef="Assign_7">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="str:Match">[m]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(line, "^(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(.+)$")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[m.Success]" DisplayName="If: regex.match success" sap2010:WorkflowViewState.IdRef="If_2">
                                  <If.Then>
                                    <Sequence DisplayName="Sequence: matchSchedule" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="s:String[]" Default="[{&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;}]" Name="cronParams" />
                                        <Variable x:TypeArguments="s:Int32[]" Default="[{-1,-1,-1,-1,-1}]" Name="actualValues" />
                                        <Variable x:TypeArguments="x:Boolean" Name="matchResult" />
                                        <Variable x:TypeArguments="x:String" Name="job" />
                                      </Sequence.Variables>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[matchResult]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[job]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[m.Groups(6).ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Sequence DisplayName="Sequence: assign params" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[cronParams(0)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[m.Groups(1).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[actualValues(0)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[currentTime.Minute]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[cronParams(1)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[m.Groups(2).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[actualValues(1)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[currentTime.Hour]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[cronParams(2)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[m.Groups(3).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[actualValues(2)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[currentTime.Day]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[cronParams(3)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[m.Groups(4).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[actualValues(3)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[currentTime.Month]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[cronParams(4)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[m.Groups(5).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[actualValues(4)]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[currentTime.DayOfWeek - 1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                      <ui:ForEach x:TypeArguments="x:Int32" DisplayName="For each: matchCronParam" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[{0,1,2,3,4}]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="x:Int32">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="x:Int32" Name="i" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body: matchCronParam" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                              <ui:InvokeCode ContinueOnError="{x:Null}" Code="  Dim tmpArr(), i As String&#xA;  Dim j As Integer&#xA;  cronParam = cronParam.Replace(&quot; &quot;, &quot;&quot;)&#xA;  If (cronParam=&quot;&quot; Or cronParam=&quot;*&quot;) Then&#xA;    matchResult = True&#xA;  Else&#xA;    matchResult = False&#xA;    For Each i In cronParam.Split(&quot;,&quot;C)&#xA;      If Int32.TryParse(i,j) Then&#xA;        If j=actualValue Then&#xA;          matchResult = True&#xA;          Exit For&#xA;        End If&#xA;      Else&#xA;        tmpArr = i.Split(&quot;-&quot;C)&#xA;        If tmpArr.Length &gt;= 2 Then&#xA;          For j = Integer.Parse(tmpArr(0)) To Integer.Parse(tmpArr(1))&#xA;            If j=actualValue Then&#xA;              matchResult = True&#xA;              Exit For&#xA;            End If&#xA;          Next&#xA;        End If&#xA;      End If&#xA;    Next&#xA;  End If&#xA;" DisplayName="Invoke code: matchCronParam" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                                                <ui:InvokeCode.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="cronParam">[cronParams(i)]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32" x:Key="actualValue">[actualValues(i)]</InArgument>
                                                  <OutArgument x:TypeArguments="x:Boolean" x:Key="matchResult">[matchResult]</OutArgument>
                                                </ui:InvokeCode.Arguments>
                                              </ui:InvokeCode>
                                              <If Condition="[matchResult]" DisplayName="If: Not(matchResult)" sap2010:WorkflowViewState.IdRef="If_3">
                                                <If.Else>
                                                  <Sequence DisplayName="Sequence: Not(matchResult) Break" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                    <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[cronParams(i) + &quot;::&quot; + actualValues(i).ToString + &quot; &gt;&gt; &quot; + matchResult.ToString]" />
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                    </ui:CommentOut>
                                                    <ui:Break sap2010:WorkflowViewState.IdRef="Break_1" />
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                      </ui:ForEach>
                                      <If Condition="[matchResult]" DisplayName="If: final matchResult" sap2010:WorkflowViewState.IdRef="If_4">
                                        <If.Then>
                                          <TryCatch DisplayName="Try catch: runJob" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                            <TryCatch.Try>
                                              <Sequence DisplayName="Sequence: runJob" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                                <If Condition="[job.StartsWith(&quot;!&quot;)]" DisplayName="If: shell/host command" sap2010:WorkflowViewState.IdRef="If_6">
                                                  <If.Then>
                                                    <Sequence DisplayName="exeCmd" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="sco:Collection(x:String)" Name="powerShellOutput" />
                                                      </Sequence.Variables>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[job]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[job.Remove(0, 1)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;#&gt; &quot; + job]" />
                                                      <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="cmd.exe" DisplayName="Invoke power shell" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_5" Output="[powerShellOutput]">
                                                        <ui:InvokePowerShell.Parameters>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Argument1">["/c " + job + " "]</InArgument>
                                                        </ui:InvokePowerShell.Parameters>
                                                      </ui:InvokePowerShell>
                                                      <If Condition="[powerShellOutput.Count &gt; 0]" DisplayName="If: powerShellOutput" sap2010:WorkflowViewState.IdRef="If_7">
                                                        <If.Then>
                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[String.Join(Environment.NewLine, powerShellOutput)]" />
                                                        </If.Then>
                                                        <If.Else>
                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="==no output data==" />
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <If Condition="[String.Compare(job,&quot;EXIT&quot;,True)=0]" DisplayName="If: EXIT" sap2010:WorkflowViewState.IdRef="If_5">
                                                      <If.Then>
                                                        <TerminateWorkflow DisplayName="Terminate workflow" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="Terminated" />
                                                      </If.Then>
                                                      <If.Else>
                                                        <ui:InvokeWorkflowInteractive ContinueOnError="{x:Null}" Depth="32" DisplayName="Launch Workflow Interactive" Height="1080" sap2010:WorkflowViewState.IdRef="InvokeWorkflowInteractive_1" KeepSessionConnected="True" LoginToConsole="True" UnSafe="True" Width="1920" WorkflowFileName="[job]">
                                                          <ui:InvokeWorkflowInteractive.Arguments>
                                                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                          </ui:InvokeWorkflowInteractive.Arguments>
                                                        </ui:InvokeWorkflowInteractive>
                                                      </If.Else>
                                                    </If>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;Failed to execute cronjob [&quot; + job + &quot;]&quot; + vbLf + vbLf + exception.Message.ToString]" />
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[powerShellCommand]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["Add-Type -IgnoreWarnings -Path '" + Environment.CurrentDirectory + "\crontab.vb'; [myNameSpace.myMainClass]::getCronJobs('" + crontab + "')"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="powershell.exe" DisplayName="InvokePowerShell" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_4" Output="[cronJobs]">
                          <ui:InvokePowerShell.Parameters>
                            <InArgument x:TypeArguments="x:String" x:Key="&quot;-noprofile&quot;">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="&quot;-command&quot;">[powerShellCommand]</InArgument>
                          </ui:InvokePowerShell.Parameters>
                        </ui:InvokePowerShell>
                        <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[cronJobs]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="job" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <ui:InvokeWorkflowInteractive ContinueOnError="{x:Null}" Depth="32" DisplayName="Launch Workflow Interactive" Height="1080" sap2010:WorkflowViewState.IdRef="InvokeWorkflowInteractive_2" KeepSessionConnected="True" LoginToConsole="True" UnSafe="True" Width="1920" WorkflowFileName="[job]">
                                  <ui:InvokeWorkflowInteractive.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowInteractive.Arguments>
                                </ui:InvokeWorkflowInteractive>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Failed in start cron: &quot; + exception.Message]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                <Assign DisplayName="Assign: seconds till next minute" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:TimeSpan">[waitTimeSpan]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:TimeSpan">[New TimeSpan(0, 0, 60-DateTime.Now.Second)]</InArgument>
                  </Assign.Value>
                </Assign>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                    <Delay DisplayName="Delay: till next minute" Duration="[waitTimeSpan]" sap2010:WorkflowViewState.IdRef="Delay_1" />
                    <FlowStep.Next>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <sads:DebugSymbol.Symbol>dyhDOlxCaWdEYXRhXFJQQVxVaVBhdGhcdGVzdEZsb3dcY3Jvbi54YW1scwFMAYYBAQJJA60DDwIBAVAJVxIDAaMBWg2PAxgCAQmSAxGZAxoCAQWcAxWcA4gBAgECVTZVRAMBpgFSN1JEAwGkAVwRgwMcAgENiwMViwPAAQIBCpcDPpcDagIBCJQDP5QDTQIBBpwDS5wDWwIBA2ITYqQBAwGeAWMT3AIgAgEP3QITggMjAgEOiwODAYsDvQECAQtiZWJwAwGhAWIsYj4DAZ8BY4YBY6cBAwGdAWkZ2QIkAgEQahtxJAMBmAFyG9gCIAIBEW9Gb1EDAZsBbEdsTQMBmQFyKXJiAgESdB/WAioCARV4IX4xAwGXAX8hhgEqAwGSAYcBIdUCJgIBFoQBTYQBsQEDAZUBgQFOgQFRAwGTAYcBL4cBPAIBF4kBJdMCMAIBGYsBWIsBngECARuMAVeMAWsCARqQASeXATADAY4BmAEnnwEwAwGJAaABJ/EBMgIBVvIBJ5ECNAIBRJICJ9ICLAIBHJUBU5UBVwMBkQGSAVSSAWEDAY8BnQFSnQFoAwGMAZoBU5oBWAMBigGhASmoATIDAYQBqQEpsAEyAgF/sQEpuAEyAgF6uQEpwAEyAgF1wQEpyAEyAgFwyQEp0AEyAgFr0QEp2AEyAgFm2QEp4AEyAgFh4QEp6AEyAgFc6QEp8AEyAgFX8gGpAfIBuAECAVX4AS2OAjgCAUWSAjWSAkQCAR2UAivQAjYCAR+mAVSmAWoDAYcBowFVowFkAwGFAa4BU64BZwMBggGrAVSrAWUDAYABtgFUtgFqAgF9swFVswFkAgF7vgFTvgFlAgF4uwFUuwFlAgF2xgFUxgFqAgFzwwFVwwFkAgFxzgFTzgFkAgFuywFUywFlAgFs1gFU1gFqAgFp0wFV0wFkAgFn3gFT3gFmAgFk2wFU2wFlAgFi5gFU5gFqAgFf4wFV4wFkAgFd7gFT7gFuAgFa6wFU6wFlAgFY+QEv/wE/AgFMgAIvjQI0AgFGlgIvxAI6AgEizAIzzAKQAgIBIPwBbfwBfgIBUv0BcP0BfQIBUPsBbPsBewIBTYACPYACTAIBR4ICM4sCPgIBSZcCMcMCNgIBI8wCoQHMAo0CAgEhgwI1iQJFAgFLigI1igJrAgFKlwI/lwJgAgEkmQI1swJAAgEutgI1wQI6AgEmnQI3pAJAAgE/pQI3pQLDAQIBPKYCN6oCTQIBNqsCN7ICPAIBL7YCQ7YCcgIBJ7gCObgCuQECASy7Ajm/AlgCASmiAmKiAnQCAUKfAmOfAmgCAUClAqQBpQLAAQIBPaYC9wGmAosCAgE6pgKOAaYClwECATmoAnSoAocBAgE3qwJFqwJmAgEwrQI7rQLhAQIBNLACO7ACvwECATK4AqoBuAK2AQIBLbsC0QK7AtgCAgEqrQKoAa0C3gECATWwAqgBsAK8AQIBMw==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="1736,59" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="1698,60" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_5" sap:VirtualizedContainerService.HintSize="1551,293" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="1551,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="1404,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="1404,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="1404,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="563,164">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_4" sap:VirtualizedContainerService.HintSize="416,293" />
      <sap2010:ViewStateData Id="Break_1" sap:VirtualizedContainerService.HintSize="416,22" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="438,479">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="563,627">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="585,955">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="1404,1089">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="653,60" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="653,91" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_5" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="675,693">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowInteractive_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="539,235" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="1239,841" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="1261,965">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="1265,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="1279,1192" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="1404,1340" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="1426,2884">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="1551,3032">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="1573,3589">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1698,3737">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="1720,3961">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="1736,4095">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_4" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowInteractive_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_8" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="264,366">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_3" sap:VirtualizedContainerService.HintSize="1736,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="1758,4409">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="1762,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="1776,4636" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,129</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">470,129 470,50 361,50</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">119,200</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">361,230 470,230 470,151</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">140,114.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">240,165.5 240,200</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">119,20</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">240,80 240,114.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="614,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">10,12.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">70,50 119,50</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="crontab_1" sap:VirtualizedContainerService.HintSize="654,716" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>